package UserInterface;

import javax.jws.soap.SOAPBinding;
import javax.swing.*;
import java.awt.*;

/**
 * User interface for the chess application
 */
public class UserInterface extends JFrame {
    private int NUMCOL = 8;
    private int COLLENGTH = 60;
    private int NUMROW = 8;
    private int ROWLENGTH = 60;
    private String[] blackBackline = new String[] {"Rb", "Nb", "Bb", "Qb", "Kb", "Bb", "Nb", "Rb"};
    private String[] whiteBackline = new String[] {"Rw", "Nw", "Bw", "Qw", "Kw", "Bw", "Nw", "Rw"};

    /**
     * Default constructor
     */
    public UserInterface() {
        createBoard();
    }

    /**
     * Constructor with default piece configuration but different board sizes
     * @param numRow
     * @param numCol
     */
    public UserInterface(int numRow, int numCol){
        NUMROW = numRow;
        NUMCOL = numCol;
        createBoard();
    }

    /**
     * Constructor with specific piece configuration
     * @param blackPieces - String array of the black piece configuration to begin with
     * @param whitePieces - String array of the black piece configuration to begin with
     * @param numRow - number of rows to begin with
     * @param numCol - number of columns to begin with
     */
    public UserInterface(String[] blackPieces, String[] whitePieces, int numRow, int numCol){
        NUMROW = numRow;
        NUMCOL = numCol;
        this.blackBackline = blackPieces.clone();
        this.whiteBackline = whitePieces.clone();
        createBoard();
    }
    /**
     * Paint the frame with a chessboard and pieces
     * @param g - Graphics object to call paint functions
     */
    public void paint(Graphics g) {
        for(int row = 0; row < NUMROW; row++) {
            for(int col = 0; col < NUMCOL; col++) {
                int xPosition = col * COLLENGTH;
                int yPosition = row * ROWLENGTH;
                if ((row + col) % 2 == 0)
                    g.setColor(Color.WHITE);
                else
                    g.setColor(new Color(150, 150, 150));

                g.fillRect(xPosition, yPosition, ROWLENGTH, COLLENGTH);
            }
        }
        initializeBlackPieces(g);
        initializeWhitePieces(g);
    }

    /**
     * Prints the black pieces on the screen.
     * @param g - Graphics object to call paint functions
     */
    public void initializeBlackPieces(Graphics g) {
        g.setColor(Color.BLACK);
        for(int col = 0; col < this.blackBackline.length; col++){
            int xPos = (int)(((float)(col+0.5)) * ROWLENGTH);
            g.drawString(this.blackBackline[col], xPos, (int)(0.5*COLLENGTH));
            g.drawString("Pb", xPos, (int)(1.5*COLLENGTH));
        }
    }

    /**
     * Prints the white pieces on the screen
     * @param g - Graphics object to call paint functions
     */
    public void initializeWhitePieces(Graphics g) {
        g.setColor(Color.BLACK);
        for(int col = 0; col < this.whiteBackline.length; col++){
            int xPos = (int)(((float)(col+0.5)) * ROWLENGTH);
            g.drawString(this.whiteBackline[col], xPos, (int)((NUMCOL-0.5)*COLLENGTH));
            g.drawString("Pw", xPos, (int)((NUMCOL-1.5)*COLLENGTH));
        }
    }

    /**
     * Initializes the Frame
     */
    public void createBoard() {
        setTitle("Chess Game");
        setSize(ROWLENGTH * NUMROW, COLLENGTH * NUMCOL);
        setVisible(true);
    }

    public static void main(String args[]) {
        // Default board configuration
//        new UserInterface();

        // Smaller board
//        new UserInterface(5,5);
        //bigger board
//        new UserInterface(10,10);
        String[] whiteCustomBackline = new String[] {"Qw", "Qw", "Qw", "Qw", "Kw", "Qw", "Qw", "Qw"};
        String[] blackCustomBackline = new String[] {"Qb", "Qb", "Qb", "Qb", "Kw", "Qb", "Qb", "Qb"};
        new UserInterface(blackCustomBackline, whiteCustomBackline, blackCustomBackline.length, blackCustomBackline.length);
    }
}
